<?xml version="1.0" encoding="utf-8"?>
<!-- http://blog.flexexamples.com/2009/06/21/creating-a-custom-halo-accordion-header-skin-in-flex-4/ -->
<s:SparkSkin minHeight="21"
			 minWidth="21"
			 creationComplete="sparkskin1_creationCompleteHandler(event)"
			 name="CustomAccordionHeaderSkin"
			 xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 alpha.disabled="0.5">
	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
		<s:State name="selectedUp"/>
		<s:State name="selectedOver"/>
		<s:State name="selectedDown"/>
		<s:State name="selectedDisabled"/>
	</s:states>

	<fx:Script>
		<![CDATA[
			import mx.containers.accordionClasses.AccordionHeader;
			import mx.core.INavigatorContent;
			import mx.core.mx_internal;

			[Bindable]
			public var label:String;

			import mx.events.FlexEvent;

			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}

			protected function sparkskin1_creationCompleteHandler(event:FlexEvent):void
			{
				var headerComponent:AccordionHeader = this.parent as AccordionHeader;
				label = headerComponent.label;
				headerComponent.getChildAt(0).visible = false;
			}

			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				backgroundColor.color = getStyle("backgroundColor");

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
	</fx:Script>
	<s:Rect width="100%"
			height="100%">
		<s:fill>
			<s:SolidColor id="backgroundColor"/>
		</s:fill>
	</s:Rect>

	<s:BitmapImage id="bitmapimage3"
				   source="@Embed('../images/accordion/Image_0.png')"
				   width="100%"
				   x="0"
				   y="0"
				   blendMode="normal"
				   smooth="true"
				   includeIn="down,selectedUp,selectedDown,selectedOver"/>
	<s:BitmapImage id="bitmapimage1"
				   source="@Embed('../images/accordion/Image_1.png')"
				   width="100%"
				   x="0"
				   y="0"
				   blendMode="normal"
				   smooth="true"
				   includeIn="up"/>
	<s:BitmapImage id="bitmapimage2"
				   source="@Embed('../images/accordion/Image_2.png')"
				   width="100%"
				   x="0"
				   y="0"
				   blendMode="normal"
				   smooth="true"
				   includeIn="over"/>
	<s:RichText id="labelDisplay1"
				x="157"
				y="15"
				color="#DDDDDD"
				color.disabled="#666666"
				fontWeight="bold"
				kerning="off"
				alpha="1"
				blendMode="normal"
				whiteSpaceCollapse="preserve"
				tabStops="S0 S50 S100 S150 S200 S250 S300 S350 S400">
		<s:filters>
			<s:DropShadowFilter color="0x000000"
								blurX="0"
								blurY="0"
								hideObject="false"
								inner="false"
								strength="0"
								alpha="1"
								quality="2"
								knockout="false"
								angle="90"
								distance="1"
								includeIn="down,over,up"/>
		</s:filters>
	</s:RichText>
	<s:RichText id="labelDisplay"
				text="{label}"
				x="18"
				y="15"
				color="#DDDDDD"
				color.disabled="#666666"
				color.up="#DDDDDD"
				fontWeight="bold"
				fontSize.up="12"
				kerning="off"
				kerning.up="off"
				alpha="1"
				blendMode="normal"
				whiteSpaceCollapse="preserve"
				tabStops="S0 S50">
		<s:filters>
			<s:DropShadowFilter color="0x000000"
								blurX="0"
								blurY="0"
								hideObject="false"
								inner="false"
								strength="0"
								alpha="1"
								quality="2"
								knockout="false"
								angle="90"
								distance="1"
								includeIn="down,over,up"/>
		</s:filters>
	</s:RichText>
	<s:transitions>
		<s:Transition fromState="disabled"
					  toState="up"
					  autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage3}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{bitmapimage2}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="up"
					  toState="over"
					  autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Fade duration="0"/>
				</s:Parallel>
				<s:Parallel target="{bitmapimage2}">
					<s:Fade duration="0"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
</s:SparkSkin>
